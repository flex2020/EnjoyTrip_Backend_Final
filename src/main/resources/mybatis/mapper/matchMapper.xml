<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.match.model.MatchMapper">
	<select id="match" parameterType="string" resultType="attractionDto">
		SELECT att.*
			from matches mat
		    join travel_destinations td on mat.course_id = td.course_id
		    join attraction_info att on att.content_id = td.attraction_id
		    where mat.match_id = #{matchId}
		    order by td.order;
	</select>
	<select id="matchDetail" parameterType="string" resultType="matchDto">
		select *
			from matches
			where match_id = #{matchId}
	</select>
	
	<select id="getMatches" resultType="matchDto">
		select * from matches
	</select>
	
	<select id="getFindMatch" parameterType="int" resultType="matchDto">
		select m.match_id, m.course_id, m.author_id, m.match_title, DATE_FORMAT(m.travel_start_date, '%Y-%m-%d') as travel_start_date
		, DATE_FORMAT(m.travel_end_date, '%Y-%m-%d') as travel_end_date
		, m.max_people, m.gender_type,DATE_FORMAT(m.deadline, '%Y-%m-%d') as deadline, m.hit, m.register_time, m.deleted, m.content, mem.nickname
		from matches m
	    join members mem on m.author_id = mem.member_id
	    where m.match_id = #{matchId}
	</select>
	
	<select id="countMembersByMatchId" parameterType="int" resultType="string">
	    SELECT COUNT(member_id)
	    FROM match_members
	    WHERE match_id = #{matchId}
	</select>
	
	<select id="getHashtags" parameterType="int" resultType="string">
	    SELECT h.hashtag_name
	    FROM match_hashtag mh
	    JOIN hashtags h ON mh.hashtag_id = h.hashtag_id
	    WHERE mh.match_id = #{matchId}
	</select>
	
	<insert id="postMatchesByMember" parameterType="map" >
		insert into match_members (match_id, member_id)
		values (#{matchId}, #{memberId})
	</insert>
	
	<select id="getMatchesByMember" parameterType="string">
		select m.*
			from match_members mm
			join matches m on mm.match_id = m.match_id
			where mm.member_id = #{memberId}
				and m.travel_end_date &gt;= current_date()
	</select>
	
	<delete id="removeMatchOfMember" parameterType="map">
		delete
			from match_members
			where member_id = #{memberId} and match_id = #{matchId}
	</delete>
	
	<select id="getFindMatches" resultType="matchListItemDto">
		select 
			m.match_id, 
		    m.match_title, 
		    GROUP_CONCAT(distinct h.hashtag_name ORDER BY h.hashtag_name SEPARATOR ',') as hashtag_names, 
		    f.file_path, 
		    m.hit
			from matches as m
			left join match_hashtag as mh on m.match_id = mh.match_id
			left join hashtags as h on mh.hashtag_id = h.hashtag_id
			left join match_file mf on m.match_id = mf.match_id
			left join files f on mf.file_id = f.file_id
			where (
				m.match_title like concat('%', #{keyword}, '%')
			    or m.content like concat('%', #{keyword}, '%')
			    or h.hashtag_name like concat('%', #{keyword}, '%')
			)
			
			group by 
		    m.match_id, m.match_title, f.file_path, m.hit
			<choose>
		        <when test="sortKey == 0">
		            ORDER BY m.match_id DESC
		        </when>
		        <!-- <when test="sortKey == 1">
		            ORDER BY like_count DESC
		        </when> -->
		        <when test="sortKey == 2">
		            ORDER BY m.hit DESC
		        </when>
		        <otherwise>
		            ORDER BY m.match_id DESC
		        </otherwise>
		    </choose>
			limit #{start}, #{listsize}
	</select>
	
	<select id="getTotalMatchCount" parameterType="map" resultType="int">
		select count(match_id)
		from matches
	</select>
	
	<insert id="writeMatch" parameterType="matchDto" useGeneratedKeys="true" keyProperty="matchId">
		insert into matches (course_id, author_id, match_title, travel_start_date, travel_end_date, max_people, gender_type, deadline, hit, register_time, deleted, content)
		values (#{courseId}, #{authorId}, #{matchTitle}, #{travelStartDate}, #{travelEndDate}, #{maxPeople}, #{genderType}, #{deadline}, #{hit}, now(), #{deleted}, #{content})
	</insert>
	
	<!-- 중복 체크 쿼리 -->
    <select id="isDuplicateHashtag" parameterType="string" resultType="HashtagDto">
        SELECT 
            hashtag_id AS hashtagId, 
            hashtag_name AS hashtagName
        FROM 
            hashtags
        WHERE 
            hashtag_name = #{hashtagName}
    </select>

    <!-- 삽입 쿼리 -->
    <insert id="writeHashtag" parameterType="hashtagDto" useGeneratedKeys="true" keyProperty="hashtagId">
        INSERT INTO hashtags (hashtag_name)
        VALUES (#{hashtagName})
    </insert>
    
    <insert id="mappingHashtag" parameterType="map">
        INSERT INTO match_hashtag (match_id, hashtag_id)
        VALUES (#{matchId}, #{hashtagId})
    </insert>
    
    <insert id="mappingFile" parameterType="matchDto">
        INSERT INTO match_file (match_id, file_id)
        VALUES (#{matchId}, #{fileId})
    </insert>
</mapper>